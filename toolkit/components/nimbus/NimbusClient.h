// This file was autogenerated by some hot garbage in the `uniffi` crate.
// Trust me, you don't want to mess with it!



#ifndef mozilla_dom_NimbusClient
#define mozilla_dom_NimbusClient

#include "jsapi.h"
#include "nsCOMPtr.h"
#include "nsIGlobalObject.h"
#include "nsISerialEventTarget.h"
#include "nsWrapperCache.h"

#include "mozilla/RefPtr.h"

#include "mozilla/dom/NimbusBinding.h"

namespace mozilla {
namespace dom {

class NimbusClient final : public nsISupports, public nsWrapperCache {
 public:
  NS_DECL_CYCLE_COLLECTING_ISUPPORTS
  NS_DECL_CYCLE_COLLECTION_SCRIPT_HOLDER_CLASS(NimbusClient)

  NimbusClient(nsIGlobalObject* aGlobal, uint64_t aHandle);

  JSObject* WrapObject(JSContext* aCx,
                       JS::Handle<JSObject*> aGivenProto) override;

  nsIGlobalObject* GetParentObject() const { return mGlobal; }

  static already_AddRefed<NimbusClient> Constructor(
    GlobalObject& aGlobal,
    const AppContext& app_ctx,
    const nsAString& dbpath,
    const RemoteSettingsConfig& remote_settings_config,
    const AvailableRandomizationUnits& available_randomization_units,
    ErrorResult& aRv
  );

  already_AddRefed<Promise> GetExperimentBranch(
    const nsAString& experiment_slug,
    ErrorResult& aRv
  );

  already_AddRefed<Promise> GetActiveExperiments(
    ErrorResult& aRv
  );

  already_AddRefed<Promise> GetGlobalUserParticipation(
    ErrorResult& aRv
  );

  already_AddRefed<Promise> SetGlobalUserParticipation(
    bool opt_in,
    ErrorResult& aRv
  );

  already_AddRefed<Promise> UpdateExperiments(
    ErrorResult& aRv
  );

  already_AddRefed<Promise> OptInWithBranch(
    const nsAString& experiment_slug,
    const nsAString& branch,
    ErrorResult& aRv
  );

  already_AddRefed<Promise> OptOut(
    const nsAString& experiment_slug,
    ErrorResult& aRv
  );

  already_AddRefed<Promise> ResetEnrollment(
    const nsAString& experiment_slug,
    ErrorResult& aRv
  );

 private:
  ~NimbusClient();

  nsCOMPtr<nsIGlobalObject> mGlobal;
  RefPtr<nsISerialEventTarget> GetBackgroundTarget();
  RefPtr<nsISerialEventTarget> mBackgroundET;
  uint64_t mHandle;
};

}  // namespace dom
}  // namespace mozilla

#endif  // mozilla_dom_NimbusClient